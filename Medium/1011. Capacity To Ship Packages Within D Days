class Solution {
public:

    bool isPossibleSol(vector<int>& weights,int days,int mid)
    {
        int dayCount = 1;
        int maxWeight = 0;

        for(int i = 0;i<weights.size();i++){
            if(maxWeight + weights[i] <= mid)
            {
                maxWeight+=weights[i];
            }
            else{
                dayCount++;
                if(dayCount>days || weights[i] > mid)
                {
                    return false;
                }
                maxWeight = weights[i];
            }
        }
        return true;
    }

    int shipWithinDays(vector<int>& weights, int days) {
        if(days>weights.size())
        {
            return -1;
        }
        int s = 0;
        int sum = 0;
        for(int i = 0;i<weights.size();i++)
        {
            sum+=weights[i];
        }
        int e = sum;
        int mid = s + (e-s)/2;
        int ans = -1;
        while(s<=e)
        {
            if(isPossibleSol(weights,days,mid))
            {
                ans = mid;
                e = mid - 1;
            }
            else{
                s = mid + 1;
            }
            mid = s + (e-s)/2;
        }
        return ans;
    }
};
